`import { Application } from "https://deno.land/x/oak/mod.ts"`

mod App {
    fn new(): App {
        return `new Application()`
    }

    fn use(app: App, cb: Fn<Context>): App {
        `app.use(cb)`
        return app
    }

    fn listen(app: App, port: Number): Promise<Unit, App.Error> {
        `app.listen({ port })`
    }
}

mod App.Context {
    fn get_response(ctx: App.Context): App.Response {
        return `ctx.response`
    }
}

mod App.Response {
    fn set_body(res: App.Response, str: String): App.Response {
        `res.body = str`
        return res
    }
}

mod Utils {
    fn log(any: a, str: String) {
        `console.log(str)`
    }
}

let port = 5000

App.new()
   .use((ctx: App.Context) {
       ctx
           .get_response()
           .set_body("Hello World")
   })
   .listen(port)
   .await
   .log("wow this logs after app listen to port #{port}")